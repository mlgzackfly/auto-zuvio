name: Test Suite

on:
  push:
    branches: [ main, feat/*, refactor/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    # Run tests every Monday at 9:00 UTC (17:00 Taiwan time)
    - cron: '0 9 * * 1'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -r requirements.txt
    
    - name: Run tests with pytest
      run: |
        source .venv/bin/activate
        pytest tests/ -v --cov=main --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install development dependencies
      run: |
        source .venv/bin/activate
        uv pip install -r requirements-dev.txt
    
    - name: Run black (code formatter)
      run: |
        source .venv/bin/activate
        black --check --diff .
    
    - name: Run isort (import sorter)
      run: |
        source .venv/bin/activate
        isort --check-only --diff .
    
    - name: Run flake8 (linter)
      run: |
        source .venv/bin/activate
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run mypy (type checker)
      run: |
        source .venv/bin/activate
        mypy main.py --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -r requirements-dev.txt
    
    - name: Run bandit security linter
      run: |
        source .venv/bin/activate
        bandit -r main.py -f json -o bandit-report.json || true
        bandit -r main.py
    
    - name: Run safety check
      run: |
        source .venv/bin/activate
        safety check --json --output safety-report.json || true
        safety check
